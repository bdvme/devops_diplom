gitlab_server: "gitlab.{{ tf_workspace }}.bdvsun.ru"
registry_server: "cr.yandex" # "registry.bdvsun.ru"

grafana_server: "grafana.{{ tf_workspace }}.bdvsun.ru"
app_server: "app.{{ tf_workspace }}.bdvsun.ru"
atlantis_server: "atlantis.{{ tf_workspace }}.bdvsun.ru"

gitlab_registry: "registry.{{ tf_workspace }}.bdvsun.ru"
gitlab_registry_http: "http://{{ gitlab_registry }}"
gitlab_url: "{{ gitlab_server }}"
atlantis_url: "http://{{ atlantis_server }}"
atlantis_webhook_secret: "atlantis-webhook-secret"
app_server_url: "http://{{ app_server }}"
gitlab_url_http: "http://{{ gitlab_server }}"
gitlab_runner_token: "GR1348941fTT5LwMxtsydjJQ5KBJY"
gitlab_extra_hosts: "192.168.1.11"

cluster_id: ""
sa_token: ""
user_id: ""
project_id: ""
api_token: ""
user_api_token: ""
master_endpoint_int: ""
master_endpoint_ext: ""
project_access_token: ""
dockerconfigjson: ""

k8s_internal_ip_node_1: ""
k8s_internal_ip_node_2: ""
k8s_internal_ip_node_3: ""

#Variables for GitLab REST API
gitlab_config:
  api_url: "http://{{ gitlab_server }}:4433/api/v4"
  api_token: "{{ api_token }}"
  allow_local_requests_from_web_hooks_and_services: "true"
  ## users
  users:
    - name: "Dmitry Bagryanskiy"
      username: "bdvme"
      password: "1Q2W3E_qazwsxedc"
      reset_password: "False"
      email: "bdvsun@bdvsun.ru"
      skip_confirmation: "True"
      user_id: "{{ user_id }}"
      user_api_token: "{{ user_api_token }}"
      personal_token:
        - name: "ACCESS_TOKEN"
          scopes: ["api", "read_api", "read_user", "write_repository"]
          expires_at: ""
  projects:
    - name: "demo-project"
      description: "Demo project"
      initialize_with_readme: "False"
      project_id: "{{ project_id }}"
      cicd:
        - key: "CI_REGISTRY"
          value: "{{ registry_server }}"
          environments: "*"
          type: "env_var"
          protected: "True"
          masked: "False"
          raw: "True"
          description: "null"
        - key: "CI_REGISTRY_ID"
          value: "{{ hostvars['k8s-cluster'].container_registry_id }}"
          environments: "*"
          type: "env_var"
          protected: "True"
          masked: "False"
          raw: "True"
          description: "null"
        - key: "KEY_JSON"
          value: "\n{{lookup('ansible.builtin.file', '../k8s/{{ tf_workspace }}/key.json')}}\n"
          environments: "*"
          type: "file"
          protected: "True"
          masked: "False"
          raw: "False"
          description: "null"
        - key: "CA_PEM"
          value: "{{lookup('ansible.builtin.file', '../k8s/{{ tf_workspace }}/ca.pem')}}"
          environments: "*"
          type: "file"
          protected: "True"
          masked: "False"
          raw: "False"
          description: "null"
        - key: "KUBE_INT_URL"
          value: "{{ hostvars['k8s-cluster'].internal_v4_endpoint }}"
          environments: "*"
          type: "env_var"
          protected: "True"
          masked: "False"
          raw: "False"
          description: "null"
        - key: "KUBE_TOKEN"
          value: "{{ sa_token }}"
          environments: "*"
          type: "env_var"
          protected: "True"
          masked: "True"
          raw: "False"
          description: "null"
        - key: "ACCESS_TOKEN"
          value: "{{ project_access_token }}"
          environments: "*"
          type: "env_var"
          protected: "True"
          masked: "True"
          raw: "False"
          description: "null"
      branches_protect:
        - name: "develop/*"
          push_access_level: "30"
          merge_access_level: "30"
          unprotect_access_level: "40"
          allow_force_push: "False"
        - name: "feature/*"
          push_access_level: "40"
          merge_access_level: "40"
          unprotect_access_level: "40"
          allow_force_push: "False"
      branches_project:
        - branch: "feature/build"
          ref: "main"
        - branch: "feature/deploy"
          ref: "main"
        - branch: "feature/release"
          ref: "main"
      project_token:
        - name: "ACCESS_TOKEN"
          scopes: ["api", "write_repository"]
          expires_at: ""
          access_level: 40
      hooks:
        - id: "{{ project_id }}"
          url: ""
          push_events: "true"
          merge_requests_events: "true"
          enable_ssl_verification: "false"
          note_events: "true"
          token: ""
    - name: "tf-infra"
      description: "Terraform infrastructure for atlantis"
      initialize_with_readme: "False"
      project_id: "{{ project_id }}"
      branches_protect:
        - name: "develop/*"
          push_access_level: "30"
          merge_access_level: "30"
          unprotect_access_level: "40"
          allow_force_push: "False"
        - name: "feature/*"
          push_access_level: "40"
          merge_access_level: "40"
          unprotect_access_level: "40"
          allow_force_push: "False"
      branches_project:
        - branch: "feature/build"
          ref: "main"
        - branch: "feature/deploy"
          ref: "main"
        - branch: "feature/release"
          ref: "main"
      project_token:
        - name: "ACCESS_TOKEN"
          scopes: ["api", "write_repository"]
          expires_at: ""
          access_level: 40
      cicd:
        - key: "CI_REGISTRY"
          value: "{{ registry_server }}"
          environments: "*"
          type: "env_var"
          protected: "True"
          masked: "False"
          raw: "True"
          description: "null"
        - key: "CI_REGISTRY_ID"
          value: "{{ hostvars['k8s-cluster'].container_registry_id }}"
          environments: "*"
          type: "env_var"
          protected: "True"
          masked: "False"
          raw: "True"
          description: "null"
        - key: "KEY_JSON"
          value: "\n{{lookup('ansible.builtin.file', '../k8s/{{ tf_workspace }}/key.json')}}\n"
          environments: "*"
          type: "file"
          protected: "True"
          masked: "False"
          raw: "False"
          description: "null"
        - key: "CA_PEM"
          value: "{{lookup('ansible.builtin.file', '../k8s/{{ tf_workspace }}/ca.pem')}}"
          environments: "*"
          type: "file"
          protected: "True"
          masked: "False"
          raw: "False"
          description: "null"
        - key: "KUBE_INT_URL"
          value: "{{ hostvars['k8s-cluster'].internal_v4_endpoint }}"
          environments: "*"
          type: "env_var"
          protected: "True"
          masked: "False"
          raw: "False"
          description: "null"
        - key: "KUBE_TOKEN"
          value: "{{ sa_token }}"
          environments: "*"
          type: "env_var"
          protected: "True"
          masked: "True"
          raw: "False"
          description: "null"
        - key: "ACCESS_TOKEN"
          value: "{{ project_access_token }}"
          environments: "*"
          type: "env_var"
          protected: "True"
          masked: "True"
          raw: "False"
          description: "null"
      hooks:
        - id: "{{ project_id }}"
          url: "{{ atlantis_url }}/events"
          push_events: "true"
          merge_requests_events: "true"
          enable_ssl_verification: "false"
          note_events: "true"
          token: "{{ atlantis_webhook_secret }}"
