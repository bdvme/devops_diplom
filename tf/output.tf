output "external_ip" {
  value = "${try(module.vm-bastion.external_ip, null)}"
}
# Создание файла inventory для Ansible средствами Terraform
resource "local_file" "inventory" {
  content = <<-DOC
# Ansible inventory containing variable values from Terraform.
# Generated by Terraform.

---
all:
  hosts:
    localhost:
      ansible_connection: local
      ansible_python_interpreter: "{{ansible_playbook_python}}"
    vm-bastion:
      ansible_host: "${element(module.vm-bastion.external_ip,0)}"
      ansible_port: "22"
      ansible_user: "${var.vm_bastion_user_name}"
      ansible_ssh_private_key_file: "${var.ssh_path}/${terraform.workspace}/${var.ssh_vm_bastion_key}"
      ansible_ssh_common_args: ""
    vm-gitlab:
      ansible_host: "${element(module.vm-gitlab.internal_ip,0)}"
      ansible_port: 22
      ansible_user: "${var.vm_gitlab_user_name}"
    k8s-cluster:
      external_v4_endpoint: "${module.k8s.external_v4_endpoint}"
      internal_v4_endpoint: "${module.k8s.internal_v4_endpoint}"
      cluster_id: "${module.k8s.cluster_id}"
      service_account_id: "${module.k8s.service_account_id}"
      node_service_account_id: "${module.k8s.node_service_account_id}"
      container_registry_id: "${yandex_container_registry.my-registry.id}" 
  vars:
    ansible_ssh_private_key_file: "${var.ssh_path}/${terraform.workspace}/${var.ssh_vm_key}"
    ansible_ssh_common_args: >-
      -o ProxyCommand="ssh -p 22 -W %h:%p -q
      -i ${var.ssh_path}/${terraform.workspace}/${var.ssh_vm_bastion_key} ${var.vm_bastion_user_name}@${element(module.vm-bastion.external_ip,0)}"
  children:
    infra:
      hosts:
        vm-bastion:
        vm-gitlab:
    gitlab:
      hosts:
        vm-gitlab:
    bastion:
      hosts:
        vm-bastion:
    DOC
  filename = join("", [var.ansible_inventory_path, "/", terraform.workspace, "-", var.ansible_inventory_filename])
  depends_on = [
    module.vm-bastion,
    module.vm-gitlab,
    module.k8s
  ]
}
